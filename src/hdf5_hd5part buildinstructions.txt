ssh

scp folder to remote :

tar -czvf fdmsph_deploy.tar.gz FDMSPH_DEPLOY
scp -i "./FDMSPH/sph.pem" fdmsph_deploy.tar.gz ec2-54-219-186-234.us-west-1.compute.amazonaws.com
:~/code

3. in the directory :
tar -xvzf fdmsph.tar.gz

----------------------------------------------------------------------------------------------
grind:


Ramdisk on UBUNTU :

mkdir -p code
sudo mount -t tmpfs -o size=45000M tmpfs code

Prereq packages :

sudo apt-get update
sudo apt-get install git -y
sudo apt-get install mercurial -y
sudo apt-get install gcc g++ -y
sudo apt-get install cmake -y &&
sudo apt-get install htop -y &&
sudo apt-get install zlib1g-dev -y &&
sudo apt-get install screen -y &&
sudo apt-get install cmake-curses-gui

HDF5 / H5Part Build instructions (single core):

1. download and build hdf5.

wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8/hdf5-1.8.17/src/hdf5-1.8.17.tar.gz &&
tar -xvf hdf5-1.8.17.tar.gz &&
cd hdf5-1.8.17 &&
./configure --prefix=/usr/local/hdf5 && sudo make && sudo make install

2. download and build hd5part.

wget https://codeforge.lbl.gov/frs/download.php/file/387/H5Part-1.6.6.tar.gz &&
tar -xvzf H5Part-1.6.6.tar.gz &&
cd H5Part-1.6.6 &&
./configure --prefix=/usr/local/hdf5 && sudo make && sudo make install

---------------------------------------------------------------------------------------------
3. Install Eigen

cd /usr/local &&
sudo hg clone https://bitbucket.org/eigen/eigen/

1. In the compiler option, specify -I/usr/local/eigen

Program Build Instructions :

1. mkdir build
2. cmake ..
3. ccmake .
4. set C_COMPILER and CXX_COMPILER to gcc.
5. set CMAKE_CXX_FLAGS : -I/usr/local/hdf5/include -L/usr/local/hdf5/lib -lH5Part -lhdf5 -lz -lsz
 OR FOR SERIAL
 -I/usr/local/hdf5/include -L/usr/local/hdf5/lib -lH5Part -lhdf5
6. should be able to make at this point.



-I/usr/local/hdf5/include -L/usr/local/hdf5/lib
--------------------------------------------------------------

Building it into your program (directly from hd5part webpage) :

			There are many different subtleties to linking on various computer platforms, but typically one does the following.

			C/C++ Serial:

			#include < H5Part.h > into your source file.
			include path : /usr/local/hdf5/include
			lib path : /usr/local/hdf5/lib
			$CC -Ipath_to_H5Part.h -Ipath_to_hdf5.h -o outfile MyFile.cc -Lpath_to_libH5Part.a -lH5Part -Lpath_to_libhdf5 -lhdf5 -lz -lsz

			C/C++ Parallel:

			#include < H5Part.h > into your source file.
			$MPICC -Ipath_to_H5Part.h -Ipath_to_hdf5.h -DPARALLEL_IO -DH5_HAVE_PARALLEL -o outfile MyFile.cc -Lpath_to_libH5Part.a -lH5Part -Lpath_to_libhdf5 -lhdf5 -lz -lsz
